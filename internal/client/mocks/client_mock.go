// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/omegion/go-cli/internal/client (interfaces: Interface)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	client "github.com/omegion/go-cli/internal/client"
	reflect "reflect"
)

// MockInterface is a mock of Interface interface
type MockInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInterfaceMockRecorder
}

// MockInterfaceMockRecorder is the mock recorder for MockInterface
type MockInterfaceMockRecorder struct {
	mock *MockInterface
}

// NewMockInterface creates a new mock instance
func NewMockInterface(ctrl *gomock.Controller) *MockInterface {
	mock := &MockInterface{ctrl: ctrl}
	mock.recorder = &MockInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInterface) EXPECT() *MockInterfaceMockRecorder {
	return m.recorder
}

// AddNumbers mocks base method
func (m *MockInterface) AddNumbers(arg0 client.NumbersOptions) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddNumbers", arg0)
	ret0, _ := ret[0].(int)
	return ret0
}

// AddNumbers indicates an expected call of AddNumbers
func (mr *MockInterfaceMockRecorder) AddNumbers(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddNumbers", reflect.TypeOf((*MockInterface)(nil).AddNumbers), arg0)
}

// SubtractNumbers mocks base method
func (m *MockInterface) SubtractNumbers(arg0 client.NumbersOptions) int {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SubtractNumbers", arg0)
	ret0, _ := ret[0].(int)
	return ret0
}

// SubtractNumbers indicates an expected call of SubtractNumbers
func (mr *MockInterfaceMockRecorder) SubtractNumbers(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SubtractNumbers", reflect.TypeOf((*MockInterface)(nil).SubtractNumbers), arg0)
}
